#!/bin/sh
#
# Copyright (C) Internet Systems Consortium, Inc. ("ISC")
#
# SPDX-License-Identifier: MPL-2.0
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at https://mozilla.org/MPL/2.0/.
#
# See the COPYRIGHT file distributed with this work for additional
# information regarding copyright ownership.

#
# Common configuration data for system tests, to be sourced into
# other shell scripts.
#

# Find the top of the BIND9 tree.
TOP_BUILDDIR=@abs_top_builddir@
TOP_SRCDIR=@abs_top_srcdir@

# Provide TMPDIR variable for tests that need it.
TMPDIR=${TMPDIR:-/tmp}

# Load common values
. $TOP_SRCDIR/bin/tests/system/conf.sh.common

TEST_TOOL_PREFIX="@TEST_TOOL_PREFIX@"
if [ -n "${TEST_TOOL_PREFIX}" ]; then
	TEST_TOOL_PREFIX="${TEST_TOOL_PREFIX} "
fi

ARPANAME="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/arpaname"
CDS="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-cds"
CHECKCONF="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/check/named-checkconf"
CHECKZONE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/check/named-checkzone"
DELV="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/delv/delv"
DIG="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dig/dig"
DNSTAPREAD="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/dnstap-read"
DSFROMKEY="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-dsfromkey"
FEATURETEST="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/feature-test"
FSTRM_CAPTURE=@FSTRM_CAPTURE@
HOST="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dig/host"
IMPORTKEY="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-importkey"
JOURNALPRINT="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/named-journalprint"
KEYFRLAB="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-keyfromlabel"
KEYGEN="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-keygen"
MDIG="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/mdig"
NAMED="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/named/named"
NSEC3HASH="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/nsec3hash"
NSLOOKUP="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dig/nslookup"
NSUPDATE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/nsupdate/nsupdate"
NZD2NZF="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/named-nzd2nzf"
RESOLVE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/resolve"
REVOKE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-revoke"
RNDC="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/rndc/rndc"
RNDCCONFGEN="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/confgen/rndc-confgen"
RRCHECKER="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tools/named-rrchecker"
SETTIME="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-settime"
SIGNER="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-signzone"
TSIGKEYGEN="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/confgen/tsig-keygen"
VERIFY="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/dnssec/dnssec-verify"
WIRETEST="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/wire_test"

BIGKEY="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/rsabigexponent/bigkey"
GENCHECK="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/rndc/gencheck"
KEYCREATE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/tkey/keycreate"
KEYDELETE="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/tkey/keydelete"
MAKEJOURNAL="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/makejournal"
PIPEQUERIES="${TEST_TOOL_PREFIX}${TOP_BUILDDIR}/bin/tests/system/pipelined/pipequeries"

# we don't want a KRB5_CONFIG setting breaking the tests
KRB5_CONFIG=/dev/null
# use local keytab instead of default /etc/krb5.keytab
KRB5_KTNAME=dns.keytab

#
# Construct the lists of tests to run
#

PARALLEL_UNIX="chain
checkds
cookie
dlzexternal
dnssec
dyndb
engine_pkcs11
filter-aaaa
kasp
keyfromlabel
keymgr2kasp
legacy
logfileconfig
nzd2nzf
pipelined
qmin
shutdown
tcp"
SUBDIRS="$PARALLEL_COMMON $PARALLEL_UNIX"

# Use the CONFIG_SHELL detected by configure for tests
SHELL=@SHELL@

# CURL will be empty if no program was found by configure
CURL=@CURL@

# NC will be empty if no program was found by configure
NC=@NC@

# XMLLINT will be empty if no program was found by configure
XMLLINT=@XMLLINT@

# XSLTPROC will be empty if no program was found by configure
XSLTPROC=@XSLTPROC@

# PERL will be an empty string if no perl interpreter was found.
PERL=$(command -v "@PERL@")

PYTHON=$(command -v "@PYTHON@" || true)
PYTEST=@PYTEST@

#
# Determine if we support various optional features.
#
LIBXML2_LIBS="@LIBXML2_LIBS@"
HAVEXMLSTATS=${LIBXML2_LIBS:+1}
JSON_C_LIBS="@JSON_C_LIBS@"
HAVEJSONSTATS=${JSON_C_LIBS:+1}
MAXMINDDB_LIBS="@MAXMINDDB_LIBS@"
HAVEGEOIP2=${MAXMINDDB_LIBS:+1}
ZLIB_LIBS="@ZLIB_LIBS@"
HAVEZLIB=${ZLIB_LIBS:+1}
LMDB_LIBS="@LMDB_LIBS@"
NZD=${LMDB_LIBS:+1}
CRYPTO=@CRYPTO@

export HAVEXMLSTATS HAVEJSONSTATS
