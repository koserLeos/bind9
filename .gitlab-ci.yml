variables:
  SHOTGUN_TEST_VERSION:
    value: "$CI_COMMIT_SHA"
    description: "version(s) to be tested (commit or branch or tag name)"
  SHOTGUN_SCENARIO:
    value: "udp"
    description: "protocol combination(s) to be tested, must be one of https://gitlab.nic.cz/knot/resolver-benchmarking/-/tree/master/roles/shotgun/files"
  SHOTGUN_TRAFFIC_MULTIPLIER:
    value: 10
    description: "client traffic volume multiplier(s); base value 1 = roughly 8 k QPS; start with multiplier 10; max. 40"
  SHOTGUN_ROUNDS:
    value: 1
    description: "repeat test for each combination of (version, scenario, traffic multiplier) this many times; three runs recommended to detect noise"
  SHOTGUN_DURATION:
    value: 60
    description: "test length in seconds, max 900 s"
  SHOTGUN_SERVER_THREADS:
    value: 16
    description: "number of online CPUs & also named -n value; range 1-16"
  EXAMPLE_SHOTGUN_TEST_VERSION_WITH_MULTIPLE_VALUES:
    value: "['main', 'v9_16_15']"
    description: "an example how to specify multiple values for version; works the same way for (scenario, traffic multiplier)"

stages:
  - job_generator
  - run_child_pipeline

### Job Definitions

# Jobs in the precheck stage

resolver-shotgun-pipeline-generator:
  stage: job_generator
  tags:
    - linux-benchmarking
  dependencies: []
  variables:
    GIT_STRATEGY: "none"
  image: "766250944489.dkr.ecr.us-east-1.amazonaws.com/shotgun-controller"
  script:
    - git config --global http.sslVerify false
    - echo "version under test $SHOTGUN_TEST_VERSION"
    - test -d bind-qa && (git fetch -C bind-qa || rm -rf bind-qa)
    - test -d bind-qa || git clone --single-branch --branch=shotgun --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.isc.org/isc-private/bind-qa.git
    - git -C bind-qa clean -ffxdq
    - git -C bind-qa reset --hard origin/shotgun
    - python3 -c "import boto3; s3 = boto3.client('s3'); s3.download_file('data.isc.org', 'bind9-resolver-benchmark/az-prices.json', 'az-prices.json');"
    - bind-qa/shotgun/shotgunrunner.py --availability-zones-file az-prices.json > child-pipeline.yaml
    - python3 -c "import yaml; yaml.safe_load(open('child-pipeline.yaml'))" || (echo "SYNTAX ERROR! most likely typo in input variables"  && exit 1)
  artifacts:
    paths:
      - "child-pipeline.yaml"
      - "*.json"
    expire_in: "1 week"
    when: always
  timeout: 5m

resolver-shotgun-child-pipeline:
  stage: run_child_pipeline
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  trigger:
    include:
      - artifact: child-pipeline.yaml
        job: resolver-shotgun-pipeline-generator
    strategy: depend
